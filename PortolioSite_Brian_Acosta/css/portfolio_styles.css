/* 
The standard approach to breakpoints and responsive design is mobile first
https://www.mavenecommerce.com/blog/progressive-enhancement-vs-graceful-degradation/
 */

/* I would suggest */
* {
  /* 
  The de.facto standard 
  https://developer.mozilla.org/es/docs/Web/CSS/box-sizing 
  */
  box-sizing: border-box;
  /*
  In general browsers have default paddings and margins for elements that
  don't match across them. Usual practice is to set 
  margin and padding to 0 in * , html or body tags, You will
  override this later for every element but this makes everything look 
  the same on every browser
    */
  margin: 0;
  padding: 0;
}

body,
html {
  /* 
  I would advise against using em because it's a relative uinit
  In general it's easier to think about pixels
   */
  margin-left: 1em;
  margin-right: 1em;

  /* padding: 0; */

  /*  This is useless as the  container is not flex */
  /* align-content: center; */
}

h1,
h2,
h3 {
  /* 
  if you don't have a strong color preference you can always go:
  color: blue; (there are tons of standar colors by name)
  */
  color: rgb(45, 60, 73);
}

/*We make sure that the links in the paragrpahs will always be clickable"*/
/* What makes the links clickable? */

p {
  min-width: 42px;
  min-height: 42px;
}

body {
  /* 
  If Roboto is not a standard font it will be displayed with Times New Roman,
  you may want to set always a standard default that looks more like the custom
  font you proposed   
   */
  font-family: Roboto, Helvetica, Arial, sans-serif;
  font-size: 18px;
}

a {
  color: rgb(45, 60, 73);
  text-decoration: none;
  font-weight: lighter;
}

/* 
This is a UI/UX advise, users are used to see something 
happening when they hover a link, whatever happens is up to you
but something should be there */
a:hover {
  text-decoration: underline;
}

/*Header's block css*/
/* 
Probably it would be better to style the "header" element (as there can be 
only one in the document outline) and save a class anme in the html
*/
/* .header { */
header {
  /* 
  This rule is useles as it's appplied to a block element which 
  by default occupies 100% of the width 
  */
  width: 100%;
  display: flex;
  flex-direction: row;

}

/* Header picture acting as logo styles */

.devs_picture {
  width: 160px;
  display: inline-flex;
}

.myData {
  /* Width 100% doesn't do anything to block elements */
  /* width: 100%; */

  margin-left: 60%;
  margin-right: auto;
}

/* Table CSS*/
.featured_block {
  text-align: center;
  padding: 0.25em;
  display: flex;
  width: 33.3%;
  flex-direction: column;
  word-break: break-word
}

.link_featured_titles {
  text-transform: uppercase;
  font-weight: bold;
  font-size: 3vw;

}

.featured_link {
  text-transform: lowercase;
  font-size: 2vw;
  min-width: 42px;
  min-height: 42px;
}

.featured_work_table {
  display: flex;
  flex-direction: row;
  width: 100%;
  margin: 0 auto;
}

.main_image_container {
  display: flex;
  width: 100%;
  margin: 0 auto;
}

/* Images */

.img_featured {
  display: flex;
  width: 100%;
  margin: 0 auto;
}

.featured_work_title {
  align-items: center;
  text-align: center;
  margin: 10px 0 0;
}


/* 
This applies  to the <hr> but the same effect could be gotten using the header 
or main tag using a border-top or border-bottom
*/
.separator {
  color: rgb(125, 151, 173);
  width: 100%;
  /*  This is useless as it only makes the child being felx elements */
  /* display: flex; */
  position: relative;
  margin-top: 20px;
  margin-bottom: 25px;
}

.coding_image {
  /*  
  This is useless as it only makes it a flex container and an image has no children
  */
  /* display: flex; */
  width: 100%;
  /* margin: 0 auto if you want to go onliner */
  margin-left: auto;
  margin-right: auto;
}

/*Media Queries*/

@media screen and (min-width: 1200px) {
  body {
    width: 1200px;
    align-content: center;
    margin-left: auto;
    margin-right: auto;
  }
}

/*SMALL VIEWPORTS*/
/*IPAD 768*1024*/


/* Ussually this bp starts at 641px (standar screen sizes */
@media screen and (min-width: 641px) and (max-width: 1200px) {
  .devs_picture {
    /* 
    As this element is inside a flex container it will expand the whole height of
    its parent. Forcing a % on thw width will make the ratio be broken.
    Check the first pixels of the breakpoint
    */
    /* width: 20%; */
  }

  .myData {
    width: 100%;
    margin-left: 25%;
    margin-right: auto;
  }

}

@media screen and (min-width: 421px) and (max-width: 640px) {

  body,
  html {
    width: 500px;
    margin-left: auto;
    margin-right: auto;
  }

  /* .devs_picture {
    width: 20%;
    margin-left: 40%;
    margin-right: 40%;
    border-radius: 50%;
  } */

  .myData {
    width: 100%;
    margin: 20px;
    text-align: right;
  }

  .header {
    flex-direction: column;
  }

  .main_image_container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
  }
}

/* PHONES/PHABLETS*/
/* 
The header layout for the header is quite broken in this bp 
The text is not shown anymore
*/
@media screen and (max-width: 420px) {

  body,
  html {
    margin-left: auto;
    margin-right: auto;
  }

  header {
    display: block;
  }

  .featured_work_table {
    flex-direction: column;
    margin-right: auto;
  }

  .featured_work_title {
    text-align: center;
    margin: 10px 0 0;
  }

  .featured_block {
    flex-direction: column;
    /* To make them full width */
    width: 100%;
  }

  .main_image_container {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
  }

  .devs_picture {
    display: block;
    width: 30%;
    margin: 20px auto;
    border-radius: 50%;
  }

  .myData {
    margin: 0 10px;
    text-align: center;
  }

  .header {
    width: 100%;
    flex-direction: column;
  }

}
